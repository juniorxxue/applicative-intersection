----------------- :: Lit
T |- i => Int


x : A \in T
-------------------------- :: Var
T |- x => A


x : A \in T   S |- A <: B
------------------------------ :: Var-S
T; S |- x => B


T , x : A |- e <= B
---------------------------------------- :: Lam
T |- \x : A . e : B => A -> B


T, x : A |- e <= B
S, C |- A -> B
------------------------------------ :: Lam-S
T; S, C |- \x. e : A -> B => A -> B


T |- e2 => A
T ; S, A |- e1 => B
----------------------------- :: App
T; S |- e1 e2 => C


T |- e1 => A
T |- e2 => B
A * B
------------------------------ :: Mrg
T |- e1 ,, e2 => A & B



T; S, A |- e1 => B
T       |- e2 => C
not S, A |- C
disjoint B C
----------------------------- :: Mrg-S-L
T; S, A |- e1 ,, e2 => C


T       |- e1 => B
T; S, A |- e2 => C
not S, A |- B
disjoint B C
------------------------------ :: Mrg-S-R
T; S, A |- e1 ,, e2 => C


T; S, A |- e1 => B
T; S, A |- e2 => C
disjoint B C
------------------------------ :: Mrg-S-P
T; S, A |- e1 ,, e2 => B & C



[] |- u1 => A
[] |- u2 => B
u1 ~~ u2
------------------------------ :: Mrg_Val
T |- u1 ,, u2 => A & B


T |- e <= A
--------------------- :: Ann
T |- e : A => A


T |- e => A
A <: B
--------------------- :: Sub
T |- e <= B


justify some cases

-------------------
succ,,not 1
-------------------


succ => I -> I
I <: I
---------------------------- Lam-S
I |- succ => I -> I
not => B -> B
~ (I |- B -> B)
(I -> I) * (B -> B)
--------------------------------- Merge-S-L
Int |- succ,,not => I
1 => I
---------------------------------- App
succ,,not 1 => I


-------------------
f,,g 1 true
f : I -> I -> I
g : I -> B -> B
-------------------


B, I |- I -> B -> B
g => I -> B -> B
---------------------------- Lam-S
B, I |- g => I -> B -> B
        f => I -> I -> I
~ (B, I |- I -> I -> I)
I -> I -> * I -> B -> B
------------------------------ Merge-S-R
B, I |- f,,g => I -> B -> B
------------------------------ App
B |- f,,g 1 => B -> B
-------------------------------- App
f,,g 1 true => B


------------------------
succ,,isNumber 1
-------------------------




--------------------------------------
I |- succ,,isNumber => I -> I & B
------------------------------------- App
succ,,isNumber 1 => I & B


---------------------------
(succ,,isNumber),,not  1
--------------------------
